package cff

import prelude.units.*

system cff {
    params {
        svc
        svc_unit

        Ev
        Erecycled
        ErecyclingEol
        EstarV
        Eer
        Ese_heat
        Ese_elec
        Ed
    }

    params {
        A = 50 percent
        B = 50 percent
        R_recycling_upstream = 0 percent
        R_recycling_downstream = 0 percent
        R_incineration = 0 percent
        Qsin_Qp = 100 percent
        Qsout_Qp = 100 percent
        LHV = 0 kWh/svc_unit
        Xer_heat = 100 percent
        Xer_elec = 100 percent
    }


    let {
        manufactured = product {
            name = "manufactured"
            reference_unit = svc_unit
        }
        used = product {
            name = "manufactured"
            reference_unit = svc_unit
        }
        recycled_material = product {
            name = "recycled material"
            reference_unit = svc_unit
        }
        material_for_recycling = product {
            name = "material for recycling"
            reference_unit = svc_unit
        }
        material_for_incineration = product {
            name = "material for incineration"
            reference_unit = svc_unit
        }
        material_for_landfill = product {
            name = "material for landfill"
            reference_unit = svc_unit
        }
    }

    process main {
        1 svc_unit svc

        inputs {
            1 svc_unit manufactured
            1 svc_unit used
        }
    }

    process manufacturing {
        1 svc_unit manufactured

        inputs {
            R_recycling_upstream * (1 svc_unit) recycled_material
            (100 percent - R_recycling_upstream) * (1 svc_unit) Ev
        }
    }

    process recycling_upstream {
        1 svc_unit recycled_material

        inputs {
            (100 percent - A)*Qsin_Qp*(1 svc_unit) Ev
            A * (1 svc_unit) Erecycled
        }
    }

    process usage {
        1 svc_unit used

        inputs {
            R_recycling_downstream * (1 svc_unit) material_for_recycling
            R_incineration * (1 svc_unit) material_for_incineration
            (100 percent - R_recycling_downstream - R_incineration) * (1 svc_unit) material_for_landfill
        }
    }
    
    process recycling {
        1 svc_unit material_for_recycling
        
        coproducts {
            (100 percent - A)*Qsout_Qp*(1 svc_unit) EstarV
        }
        
        inputs {
            (100 percent - A)*(1 svc_unit) ErecyclingEol
        }
    }

    process incineration {
        1 svc_unit material_for_incineration

        inputs {
            (100 percent - B)*(1 svc_unit) Eer
        }

        coproducts {
            (100 percent - B) * LHV * Xer_heat * (1 svc_unit) Ese_heat
            (100 percent - B) * LHV * Xer_elec * (1 svc_unit) Ese_elec
        }
    }

    process landfill {
        1 svc_unit material_for_landfill

        inputs {
            1 svc_unit Ed
        }
    }
}
